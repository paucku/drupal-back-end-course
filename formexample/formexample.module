<?php

/**
* @file
* Play with the Form API.
*/

/**
* Implements hook_menu().
*/

function formexample_menu() {
  $items['formexample'] = array(
    'title' => 'View the sample form',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('formexample_nameform'),
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM
  );
  return $items;
}

/**
* Define a form.
*/

function formexample_nameform() {
//   $form['fieldset'] = array(
//     '#title' => t('Fieldset'),
//     '#type' => 'fieldset',
//   );
//   $form['fieldset']['user_name'] = array(
//     '#title' => t('Your Name'),
//     '#type' => 'textfield',
//     '#prefix' => 'USEROOO: ',
//     '#suffix' => 'It is good',
//     '#description' => t('Please enter your name.'),
//   );
//   $form['fieldset']['submit'] = array(
//     '#type' => 'submit',
//     '#value' => t('Submit')
//   );
//   $form['fieldset']['preview'] = array(
//     '#type' => 'button', 
//     '#value' => t('X'), 
//     '#weight' => 19,
//   );
//   
  $form['name'] = array(
    '#title' => t('Your Name'),
    '#type' => 'fieldset',
    '#description' => t('What people call you.')
  );
  $form['name']['user_name'] = array(
    '#title' => t('Your Name'),
    '#type' => 'textfield',
    '#description' => t('Please enter your name.')
  );
  $form['color'] = array(
    '#title' => t('Color'),
    '#prefix' => '<hr />',
    '#suffix' => '<div class="privacy-warning">' .
t('This information will be displayed publicly!') . '</div>',

    '#type' => 'fieldset',
    '#description' => t('This fieldset contains the Color field.'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE
  );
  $form['color_options'] = array(
    '#type' => 'value',
    '#value' => array(t('red'), t('green'), t('blue'))
  );
  $form['color']['favorite_color'] = array(
    '#title' => t('Favorite Color'),
    '#type' => 'select',
    '#description' => t('Please select your favorite color.'),
    '#options' => $form['color_options']['#value']
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit')
  );
  return $form;
}

/**
* Validate the form.
*/

function formexample_nameform_validate($form, &$form_state) {
  switch ($form_state['values']['user_name']) {
    case 'Raicho':
    // We notify the form API that this field has failed validation.
      form_set_error('user_name', t('Raicho is not allowed to use this form.'));
    case 'Igor':
      form_set_error('user_name', t('Igor, get away!'));
      
  }
}

/**
* Handle post-validation form submission.
*/

function formexample_nameform_submit($form, &$form_state) {
//   $name = $form_state['values']['user_name'];
//   drupal_set_message(t('Thanks for filling out the form, %name',
//   array('%name' => $name)));
  $name = $form_state['values']['user_name'];
  $color_key = $form_state['values']['favorite_color'];
  $color = $form_state['values']['color_options'][$color_key];
  drupal_set_message(t('%name loves the color %color!', array('%name' => $name, '%color' => $color)));
}

/**
* Implements hook_theme().
*/

function formexample_theme() {
  return array(
    'formexample_nameform' => array(
      'render element' => 'form',
      'template' => 'formexample-nameform',
    ),
  );
}
